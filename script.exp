#!/usr/local/bin/expect -f
#
# This Expect script was generated by autoexpect on Thu Apr 25 11:10:06 2019
# Expect and autoexpect were both written by Don Libes, NIST.
#
# Note that autoexpect does not guarantee a working script.  It
# necessarily has to guess about certain things.  Two reasons a script
# might fail are:
#
# 1) timing - A surprising number of programs (rn, ksh, zsh, telnet,
# etc.) and devices discard or ignore keystrokes that arrive "too
# quickly" after prompts.  If you find your new script hanging up at
# one spot, try adding a short sleep just before the previous send.
# Setting "force_conservative" to 1 (see below) makes Expect do this
# automatically - pausing briefly before sending each character.  This
# pacifies every program I know of.  The -c flag makes the script do
# this in the first place.  The -C flag allows you to define a
# character to toggle this mode off and on.

set force_conservative 0  ;# set to 1 to force conservative mode even if
			  ;# script wasn't run conservatively originally
if {$force_conservative} {
	set send_slow {1 .1}
	proc send {ignore arg} {
		sleep .1
		exp_send -s -- $arg
	}
}

#
# 2) differing output - Some programs produce different output each time
# they run.  The "date" command is an obvious example.  Another is
# ftp, if it produces throughput statistics at the end of a file
# transfer.  If this causes a problem, delete these patterns or replace
# them with wildcards.  An alternative is to use the -p flag (for
# "prompt") which makes Expect only look for the last line of output
# (i.e., the prompt).  The -P flag allows you to define a character to
# toggle this mode off and on.
#
# Read the man page for more info.
#
# -Don


set timeout -1
spawn $env(SHELL)
match_max 100000
expect -exact "\[?1034h\[0;36m\[11:10:11\] \[0;37m~ \[0;36m\$ \[0;37m"
send -- "autoexp"
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- ""
expect -exact ""
send -- "cd playground\r"
expect -exact "cd playground\r
\[0;36m\[11:10:24\] \[0;37m~/playground \[0;36m\$ \[0;37m"
send -- "cd expect\r"
expect -exact "cd expect\r
\[0;36m\[11:10:27\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "autoexpect quote"
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- "estions"
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- "./questions\r"
expect -exact "./questions\r
autoexpect started, file is script.exp\r
Hello, nice to meet you.  May I ask your name?\r
"
send -- "Erin Michelle\r"
expect -exact "Erin Michelle\r
Erin Michelle is a lovely name.  What is your favorite sport?\r
"
send -- "Sco"
expect -exact " "
send -- ""
expect -exact " "
send -- "occer\r"
expect -exact "occer\r
Soccer is great.  I like Ice Hockey.\r
autoexpect done, file is script.exp\r
\[0;36m\[11:11:11\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "ll\r"
expect -exact "ll\r
total 24\r
drwxr-xr-x   5 EMC4JQ2  staff   160 Apr 25 11:11 .\r
drwxrwxrwx  98 EMC4JQ2  staff  3136 Apr 25 10:52 ..\r
-rwxr-xr-x   1 EMC4JQ2  staff   406 Apr 24 09:52 expecting\r
-rwxr-xr-x   1 EMC4JQ2  staff   203 Apr 24 09:37 questions\r
-rwxr-xr-x   1 EMC4JQ2  staff  2052 Apr 25 11:11 script.exp\r
\[0;36m\[11:11:16\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "cat script	"
expect -exact ".exp "
send -- "\r"
expect -exact "\r
#!/usr/local/bin/expect -f\r
#\r
# This Expect script was generated by autoexpect on Thu Apr 25 11:11:01 2019\r
# Expect and autoexpect were both written by Don Libes, NIST.\r
#\r
# Note that autoexpect does not guarantee a working script.  It\r
# necessarily has to guess about certain things.  Two reasons a script\r
# might fail are:\r
#\r
# 1) timing - A surprising number of programs (rn, ksh, zsh, telnet,\r
# etc.) and devices discard or ignore keystrokes that arrive \"too\r
# quickly\" after prompts.  If you find your new script hanging up at\r
# one spot, try adding a short sleep just before the previous send.\r
# Setting \"force_conservative\" to 1 (see below) makes Expect do this\r
# automatically - pausing briefly before sending each character.  This\r
# pacifies every program I know of.  The -c flag makes the script do\r
# this in the first place.  The -C flag allows you to define a\r
# character to toggle this mode off and on.\r
\r
set force_conservative 0  ;# set to 1 to force conservative mode even if\r
			  ;# script wasn't run conservatively originally\r
if {\$force_conservative} {\r
	set send_slow {1 .1}\r
	proc send {ignore arg} {\r
		sleep .1\r
		exp_send -s -- \$arg\r
	}\r
}\r
\r
#\r
# 2) differing output - Some programs produce different output each time\r
# they run.  The \"date\" command is an obvious example.  Another is\r
# ftp, if it produces throughput statistics at the end of a file\r
# transfer.  If this causes a problem, delete these patterns or replace\r
# them with wildcards.  An alternative is to use the -p flag (for\r
# \"prompt\") which makes Expect only look for the last line of output\r
# (i.e., the prompt).  The -P flag allows you to define a character to\r
# toggle this mode off and on.\r
#\r
# Read the man page for more info.\r
#\r
# -Don\r
\r
\r
set timeout -1\r
spawn ./questions\r
match_max 100000\r
expect -exact \"Hello, nice to meet you.  May I ask your name?\\r\r
\"\r
send -- \"Erin Michelle\\r\"\r
expect -exact \"Erin Michelle\\r\r
Erin Michelle is a lovely name.  What is your favorite sport?\\r\r
\"\r
send -- \"Sco\"\r
expect -exact \" \"\r
send -- \"\"\r
expect -exact \" \"\r
send -- \"occer\\r\"\r
expect eof\r
\[0;36m\[11:13:00\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "cat script.exp "
send -- "\[A"
expect -exact "ll\[K"
send -- "\[A"
expect -exact "autoexpect ./questions"
send -- "\r"
expect -exact "\r
autoexpect started, file is script.exp\r
Hello, nice to meet you.  May I ask your name?\r
"
send -- "Erin Michelle\r"
expect -exact "Erin Michelle\r
Erin Michelle is a lovely name.  What is your favorite sport?\r
"
send -- "Soccer\r"
expect -exact "Soccer\r
Soccer is great.  I like Ice Hockey.\r
autoexpect done, file is script.exp\r
\[0;36m\[11:13:37\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "cat scri	"
expect -exact "pt.exp "
send -- "\r"
expect -exact "\r
#!/usr/local/bin/expect -f\r
#\r
# This Expect script was generated by autoexpect on Thu Apr 25 11:13:31 2019\r
# Expect and autoexpect were both written by Don Libes, NIST.\r
#\r
# Note that autoexpect does not guarantee a working script.  It\r
# necessarily has to guess about certain things.  Two reasons a script\r
# might fail are:\r
#\r
# 1) timing - A surprising number of programs (rn, ksh, zsh, telnet,\r
# etc.) and devices discard or ignore keystrokes that arrive \"too\r
# quickly\" after prompts.  If you find your new script hanging up at\r
# one spot, try adding a short sleep just before the previous send.\r
# Setting \"force_conservative\" to 1 (see below) makes Expect do this\r
# automatically - pausing briefly before sending each character.  This\r
# pacifies every program I know of.  The -c flag makes the script do\r
# this in the first place.  The -C flag allows you to define a\r
# character to toggle this mode off and on.\r
\r
set force_conservative 0  ;# set to 1 to force conservative mode even if\r
			  ;# script wasn't run conservatively originally\r
if {\$force_conservative} {\r
	set send_slow {1 .1}\r
	proc send {ignore arg} {\r
		sleep .1\r
		exp_send -s -- \$arg\r
	}\r
}\r
\r
#\r
# 2) differing output - Some programs produce different output each time\r
# they run.  The \"date\" command is an obvious example.  Another is\r
# ftp, if it produces throughput statistics at the end of a file\r
# transfer.  If this causes a problem, delete these patterns or replace\r
# them with wildcards.  An alternative is to use the -p flag (for\r
# \"prompt\") which makes Expect only look for the last line of output\r
# (i.e., the prompt).  The -P flag allows you to define a character to\r
# toggle this mode off and on.\r
#\r
# Read the man page for more info.\r
#\r
# -Don\r
\r
\r
set timeout -1\r
spawn ./questions\r
match_max 100000\r
expect -exact \"Hello, nice to meet you.  May I ask your name?\\r\r
\"\r
send -- \"Erin Michelle\\r\"\r
expect -exact \"Erin Michelle\\r\r
Erin Michelle is a lovely name.  What is your favorite sport?\\r\r
\"\r
send -- \"Soccer\\r\"\r
expect eof\r
\[0;36m\[11:13:44\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "vi "
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- ""
expect -exact ""
send -- "./script	"
expect -exact ".exp "
send -- "\r"
expect -exact "\r
spawn ./questions\r\r\r
Hello, nice to meet you.  May I ask your name?\r\r
Erin Michelle\r\r
Erin Michelle is a lovely name.  What is your favorite sport?\r\r
Soccer\r\r
Soccer is great.  I like Ice Hockey.\r\r
\[0;36m\[11:19:30\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "./expecting\r"
expect -exact "./expecting\r
invalid command name \"my_name=Erin\"\r
    while executing\r
\"my_name=Erin\"\r
    (file \"./expecting\" line 5)\r\r
\[0;36m\[11:28:21\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./expecting"
send -- "\r"
expect -exact "\r
spawn ./questions\r\r\r
Hello, nice to meet you.  May I ask your name?\r\r
Erin\r\r
Erin is a lovely name.  What is your favorite sport?\r\r
Football\r\r
Football is great.  I like Ice Hockey.\r\r
\[0;36m\[11:29:03\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "my_name=Erin\r"
expect -exact "my_name=Erin\r
\[0;36m\[11:31:46\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "echo \$my_name\r"
expect -exact "echo \$my_name\r
Erin\r
\[0;36m\[11:31:51\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "./expecting Erin Michhe"
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- "elle "
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- " Foosball\r"
expect -exact " Foosball\r
spawn ./questions\r\r\r
Hello, nice to meet you.  May I ask your name?\r\r
Erin\r\r
Erin is a lovely name.  What is your favorite sport?\r\r
Foosball\r\r
Foosball is great.  I like Ice Hockey.\r\r
\[0;36m\[11:38:39\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "./questions\r"
expect -exact "./questions\r
Hello, nice to meet you.  May I ask your name?\r
"
send -- "Erin\r"
expect -exact "Erin\r
Erin is a lovely name.  What is your favorite sport?\r
"
send -- "Ice Hockey\r"
expect -exact "Ice Hockey\r
./questions: line 10: \[: missing `\]'\r
Ice Hockey is great.  I like Ice Hockey.\r
\[0;36m\[11:51:17\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./questions"
send -- "\r"
expect -exact "\r
Hello, nice to meet you.  May I ask your name?\r
"
send -- "Erin\r"
expect -exact "Erin\r
Erin is a lovely name.  What is your favorite sport?\r
"
send -- "Ice Hockey\r"
expect -exact "Ice Hockey\r
./questions: line 10: \[: too many arguments\r
Ice Hockey is great.  I like Ice Hockey.\r
\[0;36m\[11:51:39\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./questions"
send -- "\r"
expect -exact "\r
Hello, nice to meet you.  May I ask your name?\r
"
send -- "Erin\r"
expect -exact "Erin\r
Erin is a lovely name.  What is your favorite sport?\r
"
send -- "Ice Hockey\r"
expect -exact "Ice Hockey\r
Sweet!  Me too.\r
\[0;36m\[13:08:19\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "./questions\r"
expect -exact "./questions\r
Hello, nice to meet you.  May I ask your name?\r
"
send -- "Erin\r"
expect -exact "Erin\r
Oh Hi, Erin!  Would you like the coffee again?\r
"
send -- "Yes Please\r"
expect -exact "Yes Please\r
That's a fine choice.\r
\[0;36m\[13:19:44\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "./expecting\r"
expect -exact "./expecting\r
spawn ./questions\r\r\r
Hello, nice to meet you.  May I ask your name?\r\r
\r\r
 is a lovely name.  What is your favorite sport?\r\r
\[0;36m\[13:22:55\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./expecting"
send -- " Erin Foosball\r"
expect -exact " Erin Foosball\r
spawn ./questions\r\r\r
Hello, nice to meet you.  May I ask your name?\r\r
Erin\r\r
Oh Hi, Erin!  Would you like the coffee again?\r\r
\[0;36m\[13:23:06\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./expecting Erin Foosball"
send -- "\r"
expect -exact "\r
spawn ./questions\r\r\r
Hello, nice to meet you.  May I ask your name?\r\r
Erin\r\r
Oh Hi, Erin!  Would you like the coffee again?\r\r
\[0;36m\[13:24:54\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./expecting Erin Foosball"
send -- "\r"
expect -exact "\r
spawn ./questions\r\r\r
Hello, nice to meet you.  May I ask your name?\r\r
Erin\r\r
Oh Hi, Erin!  Would you like the coffee again?\r\r
\[0;36m\[13:24:59\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "./questions\r"
expect -exact "./questions\r
Hello, nice to meet you.  May I ask your name?\r
"
send -- "Erin\r"
expect -exact "Erin\r
Oh Hi, Erin!  Would you like the coffee again?\r
"
send -- "Yes, PLeas"
expect -exact " "
send -- ""
expect -exact " "
send -- ""
expect -exact " "
send -- ""
expect -exact " "
send -- "lease\r"
expect -exact "lease\r
That's a fine choice.\r
\[0;36m\[13:25:39\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./questions"
send -- "\[A"
expect -exact "expecting Erin Foosball"
send -- "\r"
expect -exact "\r
spawn ./questions\r\r\r
Hello, nice to meet you.  May I ask your name?\r\r
\[0;36m\[13:28:18\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./expecting Erin Foosball"
send -- "\r"
expect -exact "\r
spawn ./questions\r\r\r
Hello, nice to meet you.  May I ask your name?\r\r
can't read \"myname\": no such variable\r
    while executing\r
\"echo \"\$myname\"\"\r
    (file \"./expecting\" line 15)\r\r
\[0;36m\[13:29:08\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./expecting Erin Foosball"
send -- "\r"
expect -exact "\r
spawn ./questions\r\r\r
Hello, nice to meet you.  May I ask your name?\r\r
invalid command name \"echo\"\r
    while executing\r
\"echo 1.\"\r
    (file \"./expecting\" line 16)\r\r
\[0;36m\[13:30:23\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./expecting Erin Foosball"
send -- "\r"
expect -exact "\r
spawn ./questions\r\r\r
Hello, nice to meet you.  May I ask your name?\r\r
invalid command name \"echo\"\r
    while executing\r
\"echo 1\"\r
    (file \"./expecting\" line 16)\r\r
\[0;36m\[13:30:35\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./expecting Erin Foosball"
send -- "\r"
expect -exact "\r
spawn ./questions\r\r\r
Hello, nice to meet you.  May I ask your name?\r\r
\[0;36m\[13:30:47\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./expecting Erin Foosball"
send -- "\r"
expect -exact "\r
spawn ./questions\r\r\r
Hello, nice to meet you.  May I ask your name?\r\r
\[0;36m\[13:32:01\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./expecting Erin Foosball"
send -- "\r"
expect -exact "\r
spawn ./questions\r\r\r
Hello, nice to meet you.  May I ask your name?\r\r
\[0;36m\[13:33:30\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./expecting Erin Foosball"
send -- "\r"
expect -exact "\r
spawn ./questions\r\r\r
Hello, nice to meet you.  May I ask your name?\r\r
\[0;36m\[13:33:54\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./expecting Erin Foosball"
send -- "\r"
expect -exact "\r
spawn ./questions\r\r\r
Hello, nice to meet you.  May I ask your name?\r\r
Erin\r\r
Oh Hi, Erin!  Would you like the coffee again?\r\r
"
send -- ""
expect -exact "^C\[0;36m\[13:44:57\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./expecting Erin Foosball"
send -- "\r"
expect -exact "\r
spawn ./questions\r\r\r
Hello, nice to meet you.  May I ask your name?\r\r
Erin\r\r
Oh Hi, Erin!  Would you like the coffee again?\r\r
\[0;36m\[13:44:59\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./expecting Erin Foosball"
send -- "\r"
expect -exact "\r
spawn ./questions\r\r\r
Hello, nice to meet you.  May I ask your name?\r\r
Erin\r\r
Oh Hi, Erin!  Would you like the coffee again?\r\r
\[0;36m\[13:45:25\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./expecting Erin Foosball"
send -- "\r"
expect -exact "\r
spawn ./questions\r\r\r
Hello, nice to meet you.  May I ask your name?\r\r
Erin\r\r
Oh Hi, Erin!  Would you like the coffee again?\r\r
\[0;36m\[13:45:48\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./expecting Erin Foosball"
send -- "\r"
expect -exact "\r
spawn ./questions\r\r\r
Hello, nice to meet you.  May I ask your name?\r\r
Erin\r\r
Oh Hi, Erin!  Would you like the coffee again?\r\r
Yes, Please\r\r
That's a fine choice.\r\r
\[0;36m\[13:47:12\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./expecting Erin Foosball"
send -- "\r"
expect -exact "\r
spawn ./questions\r\r\r
Hello, nice to meet you.  May I ask your name?\r\r
Erin\r\r
Oh Hi, Erin!  Would you like the coffee again?\r\r
\[0;36m\[13:47:22\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./expecting Erin Foosball"
send -- "\r"
expect -exact "\r
spawn ./questions\r\r\r
Hello, nice to meet you.  May I ask your name?\r\r
Erin\r\r
Oh Hi, Erin!  Would you like the coffee again?\r\r
Yes, Please\r\r
That's a fine choice.\r\r
\[0;36m\[13:47:31\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./expecting Erin Foosball"
send -- "\r"
expect -exact "\r
spawn ./questions\r\r\r
Hello, nice to meet you.  May I ask your name?\r\r
Erin\r\r
Oh Hi, Erin!  Would you like the coffee again?\r\r
Yes Please\r\r
That's a fine choice.\r\r
\[0;36m\[13:52:20\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./expecting Erin Foosball"
send -- "\r"
expect -exact "\r
spawn ./questions\r\r\r
Hello, nice to meet you.  May I ask your name?\r\r
Erin\r\r
Oh Hi, Erin!  Would you like the coffee again?\r\r
Yes Please\r\r
That's a fine choice.\r\r
\[0;36m\[13:52:39\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./expecting Erin Foosball"
send -- "\r"
expect -exact "\r
spawn ./questions\r\r\r
Hello, nice to meet you.  May I ask your name?\r\r
Erin\r\r
Oh Hi, Erin!  Would you like the coffee again?\r\r
Yes Please\r\r
That's a fine choice.\r\r
\[0;36m\[13:52:50\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./expecting Erin Foosball"
send -- "\r"
expect -exact "\r
spawn ./questions\r\r\r
Hello, nice to meet you.  May I ask your name?\r\r
Erin\r\r
Oh Hi, Erin!  Would you like the coffee again?\r\r
Yes Please\r\r
That's a fine choice.\r\r
\[0;36m\[13:53:31\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./expecting Erin Foosball"
send -- "\r"
expect -exact "\r
spawn ./questions\r\r\r
Hello, nice to meet you.  May I ask your name?\r\r
Erin\r\r
Oh Hi, Erin!  Would you like the coffee again?\r\r
Yes Please\r\r
That's a fine choice.\r\r
\[0;36m\[14:01:20\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./expecting Erin Foosball"
send -- "\r"
expect -exact "\r
spawn ./questions\r\r\r
Hello, nice to meet you.  May I ask your name?\r\r
Erin\r\r
Oh Hi, Erin!  Would you like the coffee again?\r\r
Yes Please\r\r
That's a fine choice.\r\r
\[0;36m\[14:01:31\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "./questions\r"
expect -exact "./questions\r
Hello, nice to meet you.  May I ask your name?\r
"
send -- "Erin\r"
expect -exact "Erin\r
Oh Hi, Erin!  Would you like the coffee again?\r
"
send -- "Yes\r"
expect -exact "Yes\r
That's a fine choice. Would you like 1 lumps of sugar?\r
"
send -- "3"
expect -exact " "
send -- "yes\r"
expect -exact "yes\r
yes lumps of sugar it is!\r
./questions: line 29: unexpected EOF while looking for matching `\"'\r
./questions: line 32: syntax error: unexpected end of file\r
\[0;36m\[14:59:30\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./questions"
send -- "\r"
expect -exact "\r
Hello, nice to meet you.  May I ask your name?\r
"
send -- "Erin\r"
expect -exact "Erin\r
Oh Hi, Erin!  Would you like the coffee again?\r
"
send -- "yes\r"
expect -exact "yes\r
That's a fine choice. Would you like 1 lumps of sugar?\r
"
send -- "yes\r"
expect -exact "yes\r
1 lumps it is!\r
\[0;36m\[14:59:49\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "./questions\r"
expect -exact "./questions\r
Hello, nice to meet you.  May I ask your name?\r
"
send -- "Erin\r"
expect -exact "Erin\r
Oh Hi, Erin!  Would you like the coffee again?\r
"
send -- "yes\r"
expect -exact "yes\r
That's a fine choice. Would you like cream and sugar?\r
"
send -- "yes\r"
expect -exact "yes\r
Cream and sugar it is!\r
\[0;36m\[15:13:26\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./questions"
send -- "\r"
expect -exact "\r
Hello, nice to meet you.  May I ask your name?\r
"
send -- "Erin\r"
expect -exact "Erin\r
Oh Hi, Erin!  Would you like the coffee again?\r
"
send -- "yes\r"
expect -exact "yes\r
That's a fine choice. Would you like cream and sugar?\r
"
send -- "no\r"
expect -exact "no\r
Black it is!\r
\[0;36m\[15:13:40\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "./expecting Erin Yes\r"
expect -exact "./expecting Erin Yes\r
spawn ./questions\r\r\r
Hello, nice to meet you.  May I ask your name?\r\r
Erin\r\r
Oh Hi, Erin!  Would you like the coffee again?\r\r
Yes Please\r\r
That's a fine choice. Would you like cream and sugar?\r\r
"
send -- "yes\r"
expect -exact "yes\r
"
send -- "\r"
expect -exact "\r
"
send -- "\r"
expect -exact "\r
"
send -- "\r"
expect -exact "\r
"
send -- "\r"
expect -exact "\r
"
send -- "\r"
expect -exact "\r
"
send -- ""
expect -exact "^C\[0;36m\[15:15:07\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./expecting Erin Yes"
send -- "\r"
expect -exact "\r
spawn ./questions\r\r\r
Hello, nice to meet you.  May I ask your name?\r\r
Erin\r\r
Oh Hi, Erin!  Would you like the coffee again?\r\r
Yes Please\r\r
That's a fine choice. Would you like cream and sugar?\r\r
Yes\r\r
Cream and sugar it is!\r\r
\[0;36m\[15:15:09\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "chmod +x coffee\r"
expect -exact "chmod +x coffee\r
\[0;36m\[15:17:02\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "chmod +x getCoffee\r"
expect -exact "chmod +x getCoffee\r
\[0;36m\[15:24:37\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "./coffee\r"
expect -exact "./coffee\r
Here's your cup of coffee! Enjoy!\r
\[0;36m\[15:24:41\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "./getCoffee\r"
expect -exact "./getCoffee\r
spawn ./coffee\r\r\r
Here's your cup of coffee! Enjoy!\r\r
invalid bareword \"cups\"\r
in expression \"cups - 1\";\r
should be \"\$cups\" or \"{cups}\" or \"cups(...)\" or ...\r
    (parsing expression \"cups - 1\")\r
    invoked from within\r
\"expr cups - 1\"\r
    (\"while\" body line 4)\r
    invoked from within\r
\"while { \$more } {\r
    spawn ./coffee\r
    expect \"*Enjoy!\\r\"\r
    set cups \[expr cups - 1\]\r
    if { cups == 0 }{\r
        set more false\r
    } \r
}\"\r
    (file \"./getCoffee\" line 5)\r\r
\[0;36m\[15:24:46\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./getCoffee"
send -- "\r"
expect -exact "\r
spawn ./coffee\r\r\r
Here's your cup of coffee! Enjoy!\r\r
extra characters after close-brace\r
    while executing\r
\"if { \$cups == 0 }{\r
        set more false\r
    } \r
\"\r
    (\"while\" body line 5)\r
    invoked from within\r
\"while { \$more } {\r
    spawn ./coffee\r
    expect \"*Enjoy!\\r\"\r
    set cups \[expr \$cups - 1\]\r
    if { \$cups == 0 }{\r
        set more false\r
    } \r
}\"\r
    (file \"./getCoffee\" line 5)\r\r
\[0;36m\[15:25:10\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./getCoffee"
send -- "\r"
expect -exact "\r
spawn ./coffee\r\r\r
Here's your cup of coffee! Enjoy!\r\r
extra characters after close-brace\r
    while executing\r
\"if { \$cups == 0 }{\r
        set more false\r
    } \r
\"\r
    (\"while\" body line 5)\r
    invoked from within\r
\"while { \$more == true } {\r
    spawn ./coffee\r
    expect \"*Enjoy!\\r\"\r
    set cups \[expr \$cups - 1\]\r
    if { \$cups == 0 }{\r
        set more false\r
    } ...\"\r
    (file \"./getCoffee\" line 5)\r\r
\[0;36m\[15:25:46\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./getCoffee"
send -- "\r"
expect -exact "\r
spawn ./coffee\r\r\r
Here's your cup of coffee! Enjoy!\r\r
extra characters after close-brace\r
    while executing\r
\"if { \$cups == 0 }{\r
        set more false\r
    } \r
\"\r
    (\"while\" body line 5)\r
    invoked from within\r
\"while { \$more } {\r
    spawn ./coffee\r
    expect \"*Enjoy!\\r\"\r
    set cups \[ expr \$cups - 1 \]\r
    if { \$cups == 0 }{\r
        set more false\r
    } \r
}\"\r
    (file \"./getCoffee\" line 5)\r\r
\[0;36m\[15:26:36\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./getCoffee"
send -- "\r"
expect -exact "\r
spawn ./coffee\r\r\r
Here's your cup of coffee! Enjoy!\r\r
extra characters after close-brace\r
    while executing\r
\"if { \$cups -eq 0 }{\r
        set more false\r
    } \r
\"\r
    (\"while\" body line 5)\r
    invoked from within\r
\"while { \$more } {\r
    spawn ./coffee\r
    expect \"*Enjoy!\\r\"\r
    set cups \[ expr \$cups - 1 \]\r
    if { \$cups -eq 0 }{\r
        set more false\r
    } \r
}\"\r
    (file \"./getCoffee\" line 5)\r\r
\[0;36m\[15:26:50\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./getCoffee"
send -- "\r"
expect -exact "\r
spawn ./coffee\r\r\r
Here's your cup of coffee! Enjoy!\r\r
extra characters after close-brace\r
    while executing\r
\"if { \$cups = 0 }{\r
        set more false\r
    } \r
\"\r
    (\"while\" body line 5)\r
    invoked from within\r
\"while { \$more } {\r
    spawn ./coffee\r
    expect \"*Enjoy!\\r\"\r
    set cups \[ expr \$cups - 1 \]\r
    if { \$cups = 0 }{\r
        set more false\r
    } \r
}\"\r
    (file \"./getCoffee\" line 5)\r\r
\[0;36m\[15:27:05\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./getCoffee"
send -- "\r"
expect -exact "\r
spawn ./coffee\r\r\r
Here's your cup of coffee! Enjoy!\r\r
incomplete operator \"=\"\r
in expression \" \$cups = 0 \"\r
    (parsing expression \" \$cups = 0 \")\r
    invoked from within\r
\"if { \$cups = 0 } {\r
        set more false\r
    } \"\r
    (\"while\" body line 5)\r
    invoked from within\r
\"while { \$more } {\r
    spawn ./coffee\r
    expect \"*Enjoy!\\r\"\r
    set cups \[ expr \$cups - 1 \]\r
    if { \$cups = 0 } {\r
        set more false\r
    } \r
}\"\r
    (file \"./getCoffee\" line 5)\r\r
\[0;36m\[15:27:20\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./getCoffee"
send -- "\r"
expect -exact "\r
spawn ./coffee\r\r\r
Here's your cup of coffee! Enjoy!\r\r
incomplete operator \"=\"\r
in expression \" \$cups = 0 \"\r
    (parsing expression \" \$cups = 0 \")\r
    invoked from within\r
\"if { \$cups = 0 } {\r
        set more false\r
    } \"\r
    (\"while\" body line 5)\r
    invoked from within\r
\"while { \$more == true } {\r
    spawn ./coffee\r
    expect \"*Enjoy!\\r\"\r
    set cups \[ expr \$cups - 1 \]\r
    if { \$cups = 0 } {\r
        set more false\r
    ...\"\r
    (file \"./getCoffee\" line 5)\r\r
\[0;36m\[15:28:05\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./getCoffee"
send -- "\r"
expect -exact "\r
spawn ./coffee\r\r\r
Here's your cup of coffee! Enjoy!\r\r
spawn ./coffee\r\r\r
Here's your cup of coffee! Enjoy!\r\r
spawn ./coffee\r\r\r
Here's your cup of coffee! Enjoy!\r\r
\[0;36m\[15:28:25\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "chmod +x divider\r"
expect -exact "chmod +x divider\r
\[0;36m\[15:41:03\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "./divider\r"
expect -exact "./divider\r
\r\r
Number 10\r\r
invalid command name \"myfunc\"\r
    while executing\r
\"myfunc \$NUM\"\r
    (\"while\" body line 5)\r
    invoked from within\r
\"while {\$NUM > 0} {\r
    \r
    puts \"\\nNumber \$NUM\"\r
    \r
    set NUM \[myfunc \$NUM\]\r
\r
}\"\r
    (file \"./divider\" line 10)\r\r
\[0;36m\[15:41:06\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./divider"
send -- "\r"
expect -exact "\r
\r\r
Number 10\r\r
invalid bareword \"dividend\"\r
in expression \"dividend/2\";\r
should be \"\$dividend\" or \"{dividend}\" or \"dividend(...)\" or ...\r
    (parsing expression \"dividend/2\")\r
    invoked from within\r
\"expr dividend/2\"\r
    (procedure \"divBy2\" line 2)\r
    invoked from within\r
\"divBy2 \$NUM\"\r
    (\"while\" body line 5)\r
    invoked from within\r
\"while {\$NUM > 0} {\r
    \r
    puts \"\\nNumber \$NUM\"\r
    \r
    set NUM \[divBy2 \$NUM\]\r
\r
}\"\r
    (file \"./divider\" line 10)\r\r
\[0;36m\[15:41:18\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./divider"
send -- "\r"
expect -exact "\r
\r\r
Number 10\r\r
\r\r
Number 5\r\r
\r\r
Number 2\r\r
\r\r
Number 1\r\r
\r\r
\[0;36m\[15:41:52\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "cho"
expect -exact "\[K"
send -- "mod +x login\r"
expect -exact "mod +x login\r
\[0;36m\[15:45:49\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "./login\r"
expect -exact "./login\r
\[0;36m\[15:46:00\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "./login\r"
expect -exact "./login\r
Hello, who are you?\r
"
send -- "Erin\r"
expect -exact "Erin\r
What is you password?\r
"
send -- "xyz\r"
expect -exact "xyz\r
\[0;36m\[15:46:14\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "chmod +x logger	"
expect -exact ""
send -- ""
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- "erinner\r"
expect -exact "erinner\r
\[0;36m\[16:12:06\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "./log	"
expect -exact ""
send -- "erinner\r"
expect -exact "erinner\r
spawn ./login\r\r\r
Hello, who are you?\r\r
Hi There, I'm Erin\r\r
What is you password?\r\r
"
send -- "xyz\r"
expect -exact "xyz\r
./login: line 7: read: `There,': not a valid identifier\r
Okay, you can come in!\r
expect: spawn id exp9 not open\r
    while executing\r
\"expect \"Okay, you can come in!\\r\"\"\r
    (file \"./logerinner\" line 12)\r\r
\[0;36m\[16:12:16\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./logerinner"
send -- "\r"
expect -exact "\r
spawn ./login\r\r\r
Hello, who are you?\r\r
Hi There, I'm Erin\r\r
What is you password?\r\r
"
send -- "w\r"
expect -exact "w\r
./login: line 7: read: `There,': not a valid identifier\r
Okay, you can come in!\r
send: spawn id exp9 not open\r
    while executing\r
\"send \"\\r\"\"\r
    (file \"./logerinner\" line 11)\r\r
\[0;36m\[16:13:51\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./logerinner"
send -- "\r"
expect -exact "\r
spawn ./login\r\r\r
Hello, who are you?\r\r
Hi There, I'm Erin\r\r
What is you password?\r\r
"
send -- "x\r"
expect -exact "x\r
./login: line 7: read: `There,': not a valid identifier\r
Okay, you can come in!\r
send: spawn id exp9 not open\r
    while executing\r
\"send \"\\r\"\"\r
    (file \"./logerinner\" line 11)\r\r
\[0;36m\[16:14:15\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./logerinner"
send -- "\r"
expect -exact "\r
spawn ./login\r\r\r
Hello, who are you?\r\r
Hi There I'm Erin\r\r
What is you password?\r\r
"
send -- "s\r"
expect -exact "s\r
./login: line 7: read: `I'm': not a valid identifier\r
Okay, you can come in!\r
send: spawn id exp9 not open\r
    while executing\r
\"send \"\\r\"\"\r
    (file \"./logerinner\" line 11)\r\r
\[0;36m\[16:15:10\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./logerinner"
send -- "\r"
expect -exact "\r
spawn ./login\r\r\r
Hello, who are you?\r\r
Hi There I'm Erin\r\r
What is you password?\r\r
"
send -- "mypass++"
expect -exact "\r\r
./login: line 7: read: `I'm': not a valid identifier\r\r
Okay, you can come in!\r\r
\[0;36m\[16:15:54\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./logerinner"
send -- "\r"
expect -exact "\r
spawn ./login\r\r\r
Hello, who are you?\r\r
Hi There Im Erin\r\r
What is you password?\r\r
"
send -- "x++"
expect -exact "\r\r
Okay, you can come in!\r\r
\[0;36m\[16:16:43\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./logerinner"
send -- "\r"
expect -exact "\r
spawn ./login\r\r\r
Hello, who are you?\r\r
Hi There I'm Erin\r\r
What is you password?\r\r
"
send -- "ss++"
expect -exact "\r\r
./login: line 7: read: `I'm': not a valid identifier\r\r
Okay, you can come in!\r\r
\[0;36m\[16:17:02\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./logerinner"
send -- "\r"
expect -exact "\r
spawn ./login\r\r\r
Hello, who are you?\r\r
Hi There I/'m Erin\r\r
What is you password?\r\r
"
send -- "s++"
expect -exact "\r\r
./login: line 7: read: `I/'m': not a valid identifier\r\r
Okay, you can come in!\r\r
\[0;36m\[16:17:32\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "\[A"
expect -exact "./logerinner"
send -- "\r"
expect -exact "\r
spawn ./login\r\r\r
Hello, who are you?\r\r
Hi There Its Erin\r\r
What is you password?\r\r
"
send -- "ff++"
expect -exact "\r\r
Okay, you can come in!\r\r
\[0;36m\[16:17:47\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "g"
expect -exact "\[K"
send -- "pwd\r"
expect -exact "pwd\r
/Users/EMC4JQ2/playground/expect\r
\[0;36m\[09:35:04\] \[0;37m~/playground/expect \[0;36m\$ \[0;37m"
send -- "git init\r"
expect -exact "git init\r
Initialized empty Git repository in /Users/EMC4JQ2/playground/expect/.git/\r
\[0;36m\[09:35:13\] \[0;37mexpect\[0;31m \[0;36m\$ \[0;37m"
send -- "git commit -am "
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- "add .\r"
expect -exact "add .\r
\[0;36m\[09:36:04\] \[0;37mexpect\[0;33m \[0;36m\$ \[0;37m"
send -- "git status\r"
expect -exact "git status\r
On branch master\r
\r
No commits yet\r
\r
Changes to be committed:\r
  (use \"git rm --cached <file>...\" to unstage)\r
\r
	\[32mnew file:   coffee\[m\r
	\[32mnew file:   divider\[m\r
	\[32mnew file:   expecting\[m\r
	\[32mnew file:   getCoffee\[m\r
	\[32mnew file:   logerinner\[m\r
	\[32mnew file:   login\[m\r
	\[32mnew file:   questions\[m\r
	\[32mnew file:   script.exp\[m\r
\r
\[0;36m\[09:36:09\] \[0;37mexpect\[0;33m \[0;36m\$ \[0;37m"
send -- "git commit -m, "
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- " \"These are all the example expect scripts that I created during the formation of the expect"
expect -exact " \"These are all the example expect scripts that I created during the formation of the expect \r"
send -- " lesson in command line.\"\r"
expect -exact " lesson in command line.\"\r
\[master (root-commit) d74bfee\] These are all the example expect scripts that I created during the formation of the expect lesson in command line.\r
 8 files changed, 170